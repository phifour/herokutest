{"version":3,"sources":["app/todo/components/addassignment.component.ts"],"names":[],"mappings":"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","file":"addassignment.component.js","sourcesContent":["import { Component, Input, DoCheck, OnChanges, OnInit } from \"@angular/core\";\r\nimport { MathassignmentComponent } from \"./mathassignment.component\";\r\nimport { MathAssignment } from \"../models/mathassignment\";\r\nimport { MathService } from '../services/math.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {FormValidationComponent} from \"./formvalidation.component\";\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport {AssignmentComponent} from \"./newassignment.component\";\r\n\r\n@Component({\r\n    selector: 'app-addassignment',\r\n    template: `\r\n    <div class=\"container\">\r\n    <h3>Create your own assignment</h3>\r\n\r\n    <form [formGroup]=\"complexForm\" (ngSubmit)=\"submitForm(complexForm.value)\">\r\n      <div class=\"form-group\" [ngClass]=\"{'has-error':!complexForm.controls['name'].valid && complexForm.controls['name'].touched}\">\r\n        <label>Name of assignment:</label>\r\n        <input class=\"form-control\" type=\"text\" placeholder=\"Basic Algebra\" [formControl]=\"complexForm.controls['name']\">\r\n        <div *ngIf=\"complexForm.controls['name'].hasError('required') && complexForm.controls['name'].touched\" class=\"alert alert-danger\">You must include a assignment name.</div>\r\n      </div>\r\n\r\n\r\n    <div class=\"form-group\" [ngClass]=\"{'has-error':!complexForm.controls['creator'].valid && complexForm.controls['creator'].touched}\">\r\n        <label>Your Name:</label>\r\n        <input class=\"form-control\" type=\"text\" placeholder=\"Prof. X\" [formControl]=\"complexForm.controls['creator']\">\r\n        <div *ngIf=\"complexForm.controls['creator'].hasError('required') && complexForm.controls['creator'].touched\" class=\"alert alert-danger\">You must include your name.</div>\r\n        <div *ngIf=\"complexForm.controls['creator'].hasError('minlength') && complexForm.controls['creator'].touched\" class=\"alert alert-danger\">Your name must be at least 5 characters long.</div>\r\n        <div *ngIf=\"complexForm.controls['creator'].hasError('maxlength') && complexForm.controls['creator'].touched\" class=\"alert alert-danger\">Your name cannot exceed 10 characters.</div>\r\n    </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label>Difficulty</label>\r\n        <div class=\"alert alert-danger\" *ngIf=\"!complexForm.controls['difficulty'].valid && complexForm.controls['difficulty'].touched\">You must select a difficulty.</div>\r\n      </div>\r\n      <div class=\"radio\">\r\n        <label>\r\n          <input type=\"radio\" name=\"difficulty\" value=\"Easy\" [formControl]=\"complexForm.controls['difficulty']\">\r\n          Easy\r\n        </label>\r\n      </div>\r\n      <div class=\"radio\">\r\n        <label>\r\n          <input type=\"radio\" name=\"difficulty\" value=\"Hard\" [formControl]=\"complexForm.controls['difficulty']\">\r\n          Hard\r\n        </label>\r\n      </div>\r\n    </form>\r\n\r\n    <new-assignment [(mathassignment)]=\"mathassignment\"></new-assignment>\r\n\r\n    <div class=\"form-group\">\r\n        <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"submittest()\">Add problemset</button>\r\n    </div>\r\n    \r\n    <div *ngFor=\"let x of mathassignments; let i = index; trackBy:trackByIndex\">\r\n            <div class=\"well\">\r\n            <app-assignment [(mathassignment)]=\"mathassignments[i]\" [pos]=\"i\" [mode]=\"1\"></app-assignment>\r\n            <button type=\"button\" (click)=\"removeassignment(mathassignments[i])\" class=\"btn btn-primary btn-block\">Remove problemset</button>\r\n            </div>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"mathassignments.length<1\" class=\"alert alert-danger\">You need to add at least one problemset.</div>\r\n\r\n    <button type=\"button\" (click)=\"uploadassignment()\" class=\"btn btn-primary btn-block\" [disabled]=\"check(complexForm.valid,mathassignments.length)\">Upload to Mathtrainer</button>\r\n\r\n    </div>\r\n\r\n    `\r\n})\r\nexport class AddassignmentComponent implements DoCheck, OnChanges, OnInit {\r\n    @Input() test: string;\r\n    name: string;\r\n    problemsetscore: number[];\r\n    mathassignments: MathAssignment[];\r\n    mathassignment: MathAssignment;\r\n    id:string;\r\n    testcomplete:boolean;\r\n    myscore:number[];\r\n    totalscore:number;\r\n    difficulty:string;\r\n    creator:string;\r\n    complexForm : FormGroup;\r\n    valid:boolean; \r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private mathservice: MathService, private fb: FormBuilder) {\r\n    this.valid = false;\r\n    \r\n    this.complexForm = fb.group({\r\n      'name' : [null, Validators.required],\r\n      'creator': [null,  Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])],\r\n      'difficulty' : [null, Validators.required]\r\n    });\r\n\r\n    this.complexForm.valueChanges.subscribe( (form: any) => {\r\n      console.log('form changed to2:', form);\r\n      this.name = form.name;\r\n      this.difficulty = form.difficulty;\r\n      this.creator = form.creator;\r\n      console.log('complexForm.valid',this.complexForm.valid);\r\n\r\n      if (this.complexForm.valid === true && this.mathassignments.length > 1) {\r\n          this.valid = true;\r\n      } else {\r\n          this.valid = false;\r\n      }\r\n\r\n      console.log('parameters', this.valid, this.mathassignments.length);\r\n\r\n    });\r\n\r\n\r\n\r\n    }\r\n\r\n    check(b:boolean, n:number) {\r\n        if (b===true && n>0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    loadTest() {\r\n        console.log('Loading Test');\r\n    }\r\n\r\n\r\n\t// ngOnChanges(changes: {[ propName: string]: SimpleChange}) {\r\n\t// \tconsole.log('Change detected:', changes[person].currentValue);\r\n\t// }\r\n\r\n    removeassignment(element:MathAssignment) {\r\n        var index = this.mathassignments.indexOf(element, 0);\r\n        if (index > -1) {\r\n        this.mathassignments.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.myscore = [];\r\n        this.problemsetscore = [];\r\n        this.totalscore = 0;\r\n        this.testcomplete = false;\r\n        this.mathassignment = new MathAssignment('assignment1', 15, '$a^2+b^2=c^2$', 'possible answer 1', 'possible answer 2', 'possible answer 3', 'possible answer 4', true, false, false, false);\r\n        this.route.params\r\n        .map(params => params['id'])\r\n        .subscribe((id) => {\r\n           this.id = id;\r\n        });\r\n\r\n        this.mathassignments = [];\r\n    }\r\n\r\n  ngOnChanges() {\r\n    console.log('OnChanges called !?!?!?');\r\n    //throw new Error('ngOnChanges called; should not be when ngDoCheck is defined!');\r\n  }\r\n\r\n  ngDoCheck() {\r\n        console.log('ngDoCheck');\r\n  }\r\n\r\n\r\n\r\n    submittest() {\r\n        console.log('This Assignment', this.mathassignments);\r\n        console.log('ma',this.mathassignment);\r\n        var copy = this.deepCopy(this.mathassignment);\r\n        copy.points = Number(copy.points); // 1234\r\n        this.mathassignments.push(copy);\r\n        MathJax.Hub.Typeset();\r\n    }\r\n\r\n    public deepCopy(oldObj: any) {\r\n        var newObj = oldObj;\r\n        if (oldObj && typeof oldObj === \"object\") {\r\n            newObj = Object.prototype.toString.call(oldObj) === \"[object Array]\" ? [] : {};\r\n            for (var i in oldObj) {\r\n                 if (oldObj.hasOwnProperty(i)) {\r\n                    newObj[i] = this.deepCopy(oldObj[i]);\r\n                  }\r\n            }\r\n        }\r\n        return newObj;\r\n    }\r\n\r\n    uploadassignment() {\r\n            this.mathservice.uploadassignment(\r\n                {name: this.name,\r\n                creator: this.creator,\r\n                difficulty: this.difficulty,\r\n                mathassignment:this.mathassignments\r\n                })\r\n            .subscribe(data => { console.log('DATA', data); });\r\n            this.router.navigate(['/listofassignments']);\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/src"}