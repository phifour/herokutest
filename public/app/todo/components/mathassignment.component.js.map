{"version":3,"sources":["app/todo/components/mathassignment.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAoCA;gBAII,6BAA6B;gBAC7B,2CAA2C;gBAE3C;oBACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAC5B,CAAC;gBAMD,iBAAiB;gBAEjB,0CAAQ,GAAR,UAAS,KAAK;oBACV,OAAO,CAAC,GAAG,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACR,MAAM,CAAC,yCAAyC,CAAC;oBACrD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,wCAAwC,CAAC;oBACpD,CAAC;gBACL,CAAC;gBAED,0CAAQ,GAAR;oBACI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBAC1B,CAAC;gBAED,0CAAQ,GAAR;oBACE,UAAU,CAAC;wBACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;wBAChC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;wBACpB,wBAAwB;oBAC5B,CAAC,EAAE,CAAC,CAAC,CAAC;gBACV,CAAC;gBAzBD;oBAAC,YAAK,EAAE;;+EAAA;gBACR;oBAAC,YAAK,EAAE;;qEAAA;gBACR;oBAAC,YAAK,EAAE;;oEAAA;gBA7CZ;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,2jEA2BX;qBACF,CAAC;;2CAAA;gBAyCF,8BAAC;YAAD,CAvCA,AAuCC,IAAA;YAvCD,6DAuCC,CAAA","file":"mathassignment.component.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { EquationComponent } from \"./equation.component\";\r\nimport { MathAssignment } from \"../models/mathassignment\";\r\n\r\n@Component({\r\n    selector: 'app-assignment',\r\n    template: `\r\n    <div *ngIf=\"mode==0\" class=\"container\">\r\n            <h4>Problemset {{pos}}</h4>\r\n            <h4>{{mathassignment['problem']}}</h4>\r\n            <ul class=\"list-group\">\r\n            <li class=\"list-group-item\"><input type=\"checkbox\" [(ngModel)]=\"mathassignment.ua1\">{{mathassignment['sol1']}}</li>\r\n            <li class=\"list-group-item\"><input type=\"checkbox\" [(ngModel)]=\"mathassignment.ua2\">{{mathassignment['sol2']}} </li>\r\n            <li class=\"list-group-item\"><input type=\"checkbox\" [(ngModel)]=\"mathassignment.ua3\">{{mathassignment['sol3']}}</li>\r\n            <li class=\"list-group-item\"><input type=\"checkbox\" [(ngModel)]=\"mathassignment.ua4\">{{mathassignment['sol4']}}</li>\r\n            </ul>\r\n    </div>\r\n\r\n    <div *ngIf=\"mode==1\" class=\"container\">\r\n            <h4>Problemset {{pos}}</h4>\r\n            <h4>{{mathassignment['problem']}}</h4>\r\n            <ul class=\"list-group\">\r\n            <li *ngIf=\"mathassignment['a1']==true\" class=\"list-group-item list-group-item-success\">{{mathassignment['sol1']}}</li>\r\n            <li *ngIf=\"mathassignment['a1']==false||undefined\" class=\"list-group-item list-group-item-danger\">{{mathassignment['sol1']}}</li>\r\n            <li *ngIf=\"mathassignment['a2']==true\" class=\"list-group-item list-group-item-success\">{{mathassignment['sol2']}}</li>\r\n            <li *ngIf=\"mathassignment['a2']==false||undefined\" class=\"list-group-item list-group-item-danger\">{{mathassignment['sol2']}}</li>\r\n            <li *ngIf=\"mathassignment['a3']==true\" class=\"list-group-item list-group-item-success\">{{mathassignment['sol3']}}</li>\r\n            <li *ngIf=\"mathassignment['a3']==false||undefined\" class=\"list-group-item list-group-item-danger\">{{mathassignment['sol3']}}</li>\r\n            <li *ngIf=\"mathassignment['a4']==true\" class=\"list-group-item list-group-item-success\">{{mathassignment['sol4']}}</li>\r\n            <li *ngIf=\"mathassignment['a4']==false||undefined\" class=\"list-group-item list-group-item-danger\">{{mathassignment['sol4']}}</li>\r\n            </ul>\r\n    </div>\r\n\r\n  `\r\n})\r\n\r\nexport class MathassignmentComponent {\r\n\r\n    view_ready:boolean;\r\n\r\n    // resultElement: ElementJax;\r\n    // @ViewChild('result') result: ElementRef;\r\n\r\n    constructor() {\r\n        this.view_ready = false;\r\n    }\r\n\r\n    @Input() mathassignment: MathAssignment;\r\n    @Input() mode: number;\r\n    @Input() pos: number;\r\n\r\n    // answer:Answer;\r\n\r\n    setcolor(input) {\r\n        console.log('input',input);\r\n        if (input) {\r\n            return \"list-group-item list-group-item-success\";\r\n        } else {\r\n            return \"list-group-item list-group-item-danger\";\r\n        }\r\n    }\r\n\r\n    continue() {\r\n        MathJax.Hub.Typeset();\r\n    }\r\n\r\n    ngOnInit() {\r\n      setTimeout(() => {\r\n          console.log('finished loading');\r\n          MathJax.Hub.Typeset();\r\n            // run jQuery stuff here\r\n        }, 0);\r\n    }\r\n\r\n\r\n}\r\n"],"sourceRoot":"/src"}