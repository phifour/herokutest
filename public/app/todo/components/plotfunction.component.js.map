{"version":3,"sources":["app/todo/components/plotfunction.component.ts"],"names":[],"mappings":"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","file":"plotfunction.component.js","sourcesContent":["import { Component, OnInit, Input, OnChanges, SimpleChange  } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-plotfunction',\r\n    template: `\r\n    <h5>{{title}}</h5>\r\n    <div *ngIf=\"values.length > 0\" id=\"plotscreen\"></div>\r\n    <div *ngIf=\"values.length < 1\">\r\n        <h5>No data to plot</h5>\r\n    </div>\r\n  `\r\n})\r\n\r\nexport class PlotfunctionComponent implements OnInit {\r\n\r\n    @Input() values: any;\r\n    @Input() title: string;\r\n    @Input() usedates: number;\r\n\r\n    ngOnChanges(changes: {[propKey: string]: SimpleChange}) {\r\n        let log: string[] = [];\r\n        this.update();\r\n        console.log('changes',changes);\r\n        // for (let propName in changes) {\r\n        //     console.log('changes',changes);\r\n        // // let changedProp = changes[propName];\r\n        // // let from = JSON.stringify(changedProp.previousValue);\r\n        // // let to =   JSON.stringify(changedProp.currentValue);\r\n        // // log.push( `${propName} changed from ${from} to ${to}`);\r\n        // }\r\n    }\r\n\r\n\r\n    update() {\r\n        d3.select(\"#plotscreen\").selectAll(\"*\").remove();\r\n\r\n        var data = this.values;\r\n\r\n\r\n        var margin = { top: 30, right: 20, bottom: 30, left: 50 },\r\n            width = 600 - margin.left - margin.right,\r\n            height = 270 - margin.top - margin.bottom;\r\n\r\n        // Parse the date / time\r\n        var parseDate = d3.time.format(\"%d-%b-%y\").parse;\r\n\r\n        var ymin = d3.min(data, function (d) { return d.close; });\r\n        var ymax = d3.max(data, function (d) { return d.close; });\r\n\r\n      //x.domain([0, d3.max(data, function (d) { return d.date; })]);\r\n            //y.domain([0, d3.max(data, function (d) { return d.close; })]);\r\n\r\n        console.log('values',this.values);\r\n\r\n        // Set the ranges\r\n        var x = d3.time.scale().domain(d3.extent(data, function(d) { return d.date; }))\r\n        .range([0, width]);\r\n\r\n        var y = d3.scale.linear()\r\n            .domain([ymin, ymax])\r\n            .range([height, 0]);\r\n\r\n        // Define the axes\r\n        var xAxis = d3.svg.axis().scale(x)\r\n            .orient(\"bottom\").ticks(5);\r\n\r\n        var yAxis = d3.svg.axis().scale(y)\r\n            .orient(\"left\").ticks(5);\r\n\r\n        // Define the line\r\n        var valueline = d3.svg.line()\r\n            .x(function (d) { return x(d.date); })\r\n            .y(function (d) { return y(d.close); });\r\n\r\n        // Adds the svg canvas\r\n        var svg = d3.select(\"#plotscreen\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n            // Add the valueline path.\r\n            svg.append(\"path\")\r\n                .attr(\"class\", \"line\")\r\n                .attr(\"d\", valueline(data));\r\n\r\n            // Add the X Axis\r\n            svg.append(\"g\")\r\n                .attr(\"class\", \"x axis\")\r\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                .call(xAxis);\r\n\r\n            // Add the Y Axis\r\n            svg.append(\"g\")\r\n                .attr(\"class\", \"y axis\")\r\n                .call(yAxis);\r\n    }\r\n\r\n\r\n    initgraph() {\r\n        var margin = { top: 30, right: 20, bottom: 30, left: 50 },\r\n            width = 600 - margin.left - margin.right,\r\n            height = 270 - margin.top - margin.bottom;\r\n\r\n        // Parse the date / time\r\n        var parseDate = d3.time.format(\"%d-%b-%y\").parse;\r\n\r\n        // Set the ranges\r\n        var x = d3.time.scale().range([0, width]);\r\n        var y = d3.scale.linear().range([height, 0]);\r\n\r\n        // Define the axes\r\n        var xAxis = d3.svg.axis().scale(x)\r\n            .orient(\"bottom\").ticks(5);\r\n\r\n        var yAxis = d3.svg.axis().scale(y)\r\n            .orient(\"left\").ticks(5);\r\n\r\n        // Define the line\r\n        var valueline = d3.svg.line()\r\n            .x(function (d) { return x(d.date); })\r\n            .y(function (d) { return y(d.close); });\r\n\r\n        // Adds the svg canvas\r\n        var svg = d3.select(\"#plotscreen\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    ngOnInit() {\r\n         //this.initgraph();\r\n         this.update(); \r\n        // var data = [{date:'1-May-12',close:58.13}, {date:'30-Apr-12',close:53.98}];\r\n\r\n//        });\r\n\r\n        // Get the data\r\n        // d3.csv(\"../../dependencies/data.csv\", function (error, data) {\r\n        //     data.forEach(function (d) {\r\n        //         d.date = parseDate(d.date);\r\n        //         d.close = +d.close;\r\n        //     });\r\n\r\n        //     // Scale the range of the data\r\n        //     x.domain(d3.extent(data, function (d) { return d.date; }));\r\n        //     y.domain([0, d3.max(data, function (d) { return d.close; })]);\r\n\r\n        //     // Add the valueline path.\r\n        //     svg.append(\"path\")\r\n        //         .attr(\"class\", \"line\")\r\n        //         .attr(\"d\", valueline(data));\r\n\r\n        //     // Add the X Axis\r\n        //     svg.append(\"g\")\r\n        //         .attr(\"class\", \"x axis\")\r\n        //         .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        //         .call(xAxis);\r\n\r\n        //     // Add the Y Axis\r\n        //     svg.append(\"g\")\r\n        //         .attr(\"class\", \"y axis\")\r\n        //         .call(yAxis);\r\n\r\n        // });\r\n    }\r\n\r\n\r\n    }\r\n"],"sourceRoot":"/src"}