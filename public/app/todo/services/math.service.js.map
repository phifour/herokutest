{"version":3,"sources":["app/todo/services/math.service.ts"],"names":[],"mappings":"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","file":"math.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class MathService {\r\n  private headers: Headers;\r\n\r\n  constructor(private http: Http) {\r\n        this.headers = new Headers();\r\n        this.headers.append('Content-Type', 'application/json');\r\n  }\r\n\r\n  getTime() {\r\n    return this.http.get('http://date.jsontest.com')\r\n      .map((response: Response) => response.json());\r\n  }\r\n\r\n\r\n  sendData(user: any) {\r\n    const body = JSON.stringify(user);\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    //return this.http.post('https://mathtrainer-3d393.firebaseio.com/highscore.json', body, {\r\n    return this.http.post('https://flickering-inferno-6917.firebaseio.com/highscore.json', body, {\r\n      headers: headers\r\n    })\r\n      .map((data: Response) => data.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  uploadassignment(user: any) {\r\n    const body = JSON.stringify(user);\r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    //return this.http.post('https://mathtrainer-3d393.firebaseio.com/highscore.json', body, {\r\n    return this.http.post('https://flickering-inferno-6917.firebaseio.com/assignment.json', body, {\r\n      headers: headers\r\n    })\r\n      .map((data: Response) => data.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n    testfoursquare() {\r\n        var url = \"https://api.foursquare.com/v2/venues/search?v=20130815&&\";\r\n        var query = \"&query=sushi\";\r\n        var near = \"&near=Vienna,AT\";\r\n        var client_id = '&client_id=DATGSLTPSJN2AUSVTGOK12NIGHPOTDD4Z1SEZ0XLPN0DOPBU';\r\n        var client_secret = '&client_secret=1YQUJF4STX2FTU4HMDDA5IFZEJSNSJB35RBTGP3SKKR0M4RL';\r\n        var requrl = url + query + near + client_id + client_secret;\r\n        return this.http.get(requrl)\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n  public getfirebasedata(url:string) {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json'\r\n    });\r\n    return this.http\r\n      .get(url, { headers: headers })\r\n           .map(res => res.json())\r\n            .catch(this.handleError);\r\n  }\r\n\r\n    getPhotoURL(id:number) {\r\n        var photourl = 'https://api.foursquare.com/v2/venues/' + id + '/photos?&&';\r\n        var client_id = 'client_id=DATGSLTPSJN2AUSVTGOK12NIGHPOTDD4Z1SEZ0XLPN0DOPBU';\r\n        var client_secret = '&client_secret=1YQUJF4STX2FTU4HMDDA5IFZEJSNSJB35RBTGP3SKKR0M4RL';\r\n        var limit = '&limit=1';\r\n        var v = '&v=20130815';\r\n        var requrl = photourl + client_id + client_secret + limit + v;\r\n        console.log(requrl);\r\n        return requrl;\r\n    }\r\n    \r\n    getImageIDs(ids:number[]) {\r\n        var obs: any[];\r\n        obs = [];\r\n        for (var i = 0; i < ids.length; i++) {\r\n            obs.push(this.http.get(this.getPhotoURL(ids[i])).map((res: Response) => res.json()));\r\n        }\r\n        console.log('obs', obs);\r\n        return Observable.forkJoin(obs);\r\n    }\r\n\r\n  private addtoFirebase(): Promise<Response> {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json'\r\n    });\r\n    var hero = {test:12345};\r\n    return this.http\r\n      .post(\"https://flickering-inferno-6917.firebaseio.com/equation/test.json\", JSON.stringify(hero), { headers: headers })\r\n      .toPromise()\r\n      .then(res => res.json().data)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    console.error('An error occurred', error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}